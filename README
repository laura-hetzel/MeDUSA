Object Desciptions/expectations:


MZ-OBJ: The standard "MZ Object"
DataFrame where:
  - Rownames = Float: MZ
  - Colnames = String: sample_names
  - Data     = Float: Intensities

METADATA: The standard "MZ Metadata object"
Dataframe where the columns are:
  - Integer: measurement
  - String : sample_name (Must match above)
  - String : type (i.e. cell, media_cell, solvent)
  - Integer: sample_number
  - String : phenotype
  - Integer: time
  - Integer: plate
  - Integer: cell_count
  - String : sampler
  - String : polarity
  - String : sampling_day
  - String : filtered_out (yes, no) #todo turn this into a boolean

TODOS:
  - Docker -> Raw-MZML : msconvert doesnt play well with mac-M1 (apple silcon docker compatibility issue)
  - MZML_1 -> Try using sapply rather than for loops
  - MZML_1 -> Refactor: Improve Memory and Speed (could be Docker limitation)
               -> Refactor away from joins
               -> Write more to disk
               -> Output in progress files
  - MZML_1 -> Binning is too simple
------- : ^^ Fixed with original scripts
  - MZML_2 -> PeakPicking ===>> PeakShapeFiltering
  - MZML_3 -> Generate MetaData???
  - MZ_1 -> Fix
  - MZ_6 -> Add Random Forest
  - MZ_7 -> Migrate HMDB script

----- Ahmed
  -x MZML_1-old -> Binning (intensity) math (avg, max, median)
  -x MZML_1-old -> Add tolerance to binning params
  -x MZML_1-old -> Make it more obvious when using binning/centroiding classes
  -x Binning -> Choose bin mz by intesity math (average, max, and **weighted-intensity**)
  -x 1st Centroid -> TimeSquash ( filter out ( "missingness across scans" , " " )
                             allow other math on time-scans)

---- Ahmed todo2
  -x Missingness by # of Scans
  -x LowIntensity in mzML ## ( didn't add to squashTime; feels repeditive)
  -x tagging list
  -x tagging isotope

---- Laura todo
  - extract_magic, all the parameters
  -X docker image, including sumr
  -X fix trycatch in massdefect
  -X why missingness drop rows with value of 1
  - blanksubtraction, validation
  - hmdb/lipidmaps
  - mz_random_forest
